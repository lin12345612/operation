{"version":3,"sources":["body.js"],"names":[],"mappings":"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","file":"body-compiled.js","sourcesContent":["\n/**\n * body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nvar convert = require('encoding').convert;\nvar bodyStream = require('is-stream');\nvar PassThrough = require('stream').PassThrough;\nvar FetchError = require('./fetch-error');\n\nmodule.exports = Body;\n\n/**\n * Body class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body, opts) {\n\n\topts = opts || {};\n\n\tthis.body = body;\n\tthis.bodyUsed = false;\n\tthis.size = opts.size || 0;\n\tthis.timeout = opts.timeout || 0;\n\tthis._raw = [];\n\tthis._abort = false;\n\n}\n\n/**\n * Decode response as json\n *\n * @return  Promise\n */\nBody.prototype.json = function() {\n\n\tvar self = this;\n\n\treturn this._decode().then(function(buffer) {\n\t\ttry {\n\t\t\treturn JSON.parse(buffer.toString());\n\t\t} catch (err) {\n\t\t\treturn Body.Promise.reject(new FetchError('invalid json response body at ' + self.url + ' reason: ' + err.message, 'invalid-json'));\n\t\t}\n\t});\n\n};\n\n/**\n * Decode response as text\n *\n * @return  Promise\n */\nBody.prototype.text = function() {\n\n\treturn this._decode().then(function(buffer) {\n\t\treturn buffer.toString();\n\t});\n\n};\n\n/**\n * Decode response as buffer (non-spec api)\n *\n * @return  Promise\n */\nBody.prototype.buffer = function() {\n\n\treturn this._decode();\n\n};\n\n/**\n * Decode buffers into utf-8 string\n *\n * @return  Promise\n */\nBody.prototype._decode = function() {\n\n\tvar self = this;\n\n\tif (this.bodyUsed) {\n\t\treturn Body.Promise.reject(new Error('body used already for: ' + this.url));\n\t}\n\n\tthis.bodyUsed = true;\n\tthis._bytes = 0;\n\tthis._abort = false;\n\tthis._raw = [];\n\n\treturn new Body.Promise(function(resolve, reject) {\n\t\tvar resTimeout;\n\n\t\t// body is string\n\t\tif (typeof self.body === 'string') {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [new Buffer(self.body)];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// body is buffer\n\t\tif (self.body instanceof Buffer) {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [self.body];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// allow timeout on slow response body\n\t\tif (self.timeout) {\n\t\t\tresTimeout = setTimeout(function() {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('response timeout at ' + self.url + ' over limit: ' + self.timeout, 'body-timeout'));\n\t\t\t}, self.timeout);\n\t\t}\n\n\t\t// handle stream error, such as incorrect content-encoding\n\t\tself.body.on('error', function(err) {\n\t\t\treject(new FetchError('invalid response body at: ' + self.url + ' reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\t// body is stream\n\t\tself.body.on('data', function(chunk) {\n\t\t\tif (self._abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (self.size && self._bytes + chunk.length > self.size) {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('content size at ' + self.url + ' over limit: ' + self.size, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself._bytes += chunk.length;\n\t\t\tself._raw.push(chunk);\n\t\t});\n\n\t\tself.body.on('end', function() {\n\t\t\tif (self._abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\t\t\tresolve(self._convert());\n\t\t});\n\t});\n\n};\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   String  encoding  Target encoding\n * @return  String\n */\nBody.prototype._convert = function(encoding) {\n\n\tencoding = encoding || 'utf-8';\n\n\tvar ct = this.headers.get('content-type');\n\tvar charset = 'utf-8';\n\tvar res, str;\n\n\t// header\n\tif (ct) {\n\t\t// skip encoding detection altogether if not html/xml/plain text\n\t\tif (!/text\\/html|text\\/plain|\\+xml|\\/xml/i.test(ct)) {\n\t\t\treturn Buffer.concat(this._raw);\n\t\t}\n\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tif (!res && this._raw.length > 0) {\n\t\tfor (var i = 0; i < this._raw.length; i++) {\n\t\t\tstr += this._raw[i].toString()\n\t\t\tif (str.length > 1024) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstr = str.substr(0, 1024);\n\t}\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(\n\t\tBuffer.concat(this._raw)\n\t\t, encoding\n\t\t, charset\n\t);\n\n};\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nBody.prototype._clone = function(instance) {\n\tvar p1, p2;\n\tvar body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (bodyStream(body) && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance.body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n"]}