{"version":3,"sources":["flattenArray.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;;AAUA;;;;;;;;;;;;;;AAaA,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,MAAI,SAAS,EAAb;AACA,UAAQ,KAAR,EAAe,MAAf;AACA,SAAO,MAAP;AACD;;AAED,SAAS,OAAT,CAAiB,KAAjB,EAAwB,MAAxB,EAAgC;AAC9B,MAAI,SAAS,MAAM,MAAnB;AACA,MAAI,KAAK,CAAT;;AAEA,SAAO,QAAP,EAAiB;AACf,QAAI,UAAU,MAAM,IAAN,CAAd;AACA,QAAI,MAAM,OAAN,CAAc,OAAd,CAAJ,EAA4B;AAC1B,cAAQ,OAAR,EAAiB,MAAjB;AACD,KAFD,MAEO;AACL,aAAO,IAAP,CAAY,OAAZ;AACD;AACF;AACF;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"flattenArray-compiled.js","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/**\n * Returns a flattened array that represents the DFS traversal of the supplied\n * input array. For example:\n *\n *   var deep = [\"a\", [\"b\", \"c\"], \"d\", {\"e\": [1, 2]}, [[\"f\"], \"g\"]];\n *   var flat = flattenArray(deep);\n *   console.log(flat);\n *   > [\"a\", \"b\", \"c\", \"d\", {\"e\": [1, 2]}, \"f\", \"g\"];\n *\n * @see https://github.com/jonschlinkert/arr-flatten\n * @copyright 2014-2015 Jon Schlinkert\n * @license MIT\n */\nfunction flattenArray(array) {\n  var result = [];\n  flatten(array, result);\n  return result;\n}\n\nfunction flatten(array, result) {\n  var length = array.length;\n  var ii = 0;\n\n  while (length--) {\n    var current = array[ii++];\n    if (Array.isArray(current)) {\n      flatten(current, result);\n    } else {\n      result.push(current);\n    }\n  }\n}\n\nmodule.exports = flattenArray;"]}