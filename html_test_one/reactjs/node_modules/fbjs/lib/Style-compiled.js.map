{"version":3,"sources":["Style.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;AASA,IAAI,mBAAmB,QAAQ,oBAAR,CAAvB;;AAEA;;;;;AAKA,SAAS,iBAAT,CAA2B,OAA3B,EAAoC,IAApC,EAA0C;AACxC,MAAI,WAAW,MAAM,GAAN,CAAU,OAAV,EAAmB,IAAnB,CAAf;AACA,SAAO,aAAa,MAAb,IAAuB,aAAa,QAA3C;AACD;;AAED;;;AAGA,IAAI,QAAQ;AACV;;;;;;;;AAQA,OAAK,gBATK;;AAWV;;;;;;;;AAQA,mBAAiB,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AAC9C,QAAI,CAAC,IAAL,EAAW;AACT,aAAO,IAAP;AACD;AACD,QAAI,gBAAgB,KAAK,aAAzB;AACA,WAAO,QAAQ,SAAS,cAAc,IAAtC,EAA4C;AAC1C,UAAI,kBAAkB,IAAlB,EAAwB,UAAxB,KAAuC,kBAAkB,IAAlB,EAAwB,WAAxB,CAAvC,IAA+E,kBAAkB,IAAlB,EAAwB,WAAxB,CAAnF,EAAyH;AACvH,eAAO,IAAP;AACD;AACD,aAAO,KAAK,UAAZ;AACD;AACD,WAAO,cAAc,WAAd,IAA6B,cAAc,YAAlD;AACD;;AA/BS,CAAZ;;AAmCA,OAAO,OAAP,GAAiB,KAAjB","file":"Style-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar getStyleProperty = require('./getStyleProperty');\n\n/**\n * @param {DOMNode} element [description]\n * @param {string} name Overflow style property name.\n * @return {boolean} True if the supplied ndoe is scrollable.\n */\nfunction _isNodeScrollable(element, name) {\n  var overflow = Style.get(element, name);\n  return overflow === 'auto' || overflow === 'scroll';\n}\n\n/**\n * Utilities for querying and mutating style properties.\n */\nvar Style = {\n  /**\n   * Gets the style property for the supplied node. This will return either the\n   * computed style, if available, or the declared style.\n   *\n   * @param {DOMNode} node\n   * @param {string} name Style property name.\n   * @return {?string} Style property value.\n   */\n  get: getStyleProperty,\n\n  /**\n   * Determines the nearest ancestor of a node that is scrollable.\n   *\n   * NOTE: This can be expensive if used repeatedly or on a node nested deeply.\n   *\n   * @param {?DOMNode} node Node from which to start searching.\n   * @return {?DOMWindow|DOMElement} Scroll parent of the supplied node.\n   */\n  getScrollParent: function getScrollParent(node) {\n    if (!node) {\n      return null;\n    }\n    var ownerDocument = node.ownerDocument;\n    while (node && node !== ownerDocument.body) {\n      if (_isNodeScrollable(node, 'overflow') || _isNodeScrollable(node, 'overflowY') || _isNodeScrollable(node, 'overflowX')) {\n        return node;\n      }\n      node = node.parentNode;\n    }\n    return ownerDocument.defaultView || ownerDocument.parentWindow;\n  }\n\n};\n\nmodule.exports = Style;"]}