{"version":3,"sources":["flatMapArray.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;AASA,IAAI,OAAO,MAAM,SAAN,CAAgB,IAA3B;;AAEA;;;;;;;;AAQA,SAAS,YAAT,CAAsB,KAAtB,EAA6B,EAA7B,EAAiC;AAC/B,MAAI,MAAM,EAAV;AACA,OAAK,IAAI,KAAK,CAAd,EAAiB,KAAK,MAAM,MAA5B,EAAoC,IAApC,EAA0C;AACxC,QAAI,SAAS,GAAG,IAAH,CAAQ,KAAR,EAAe,MAAM,EAAN,CAAf,EAA0B,EAA1B,CAAb;AACA,QAAI,MAAM,OAAN,CAAc,MAAd,CAAJ,EAA2B;AACzB,WAAK,KAAL,CAAW,GAAX,EAAgB,MAAhB;AACD,KAFD,MAEO,IAAI,UAAU,IAAd,EAAoB;AACzB,YAAM,IAAI,SAAJ,CAAc,0DAA0D,YAA1D,GAAyE,MAAzE,GAAkF,WAAhG,CAAN;AACD;AACF;AACD,SAAO,GAAP;AACD;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"flatMapArray-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar push = Array.prototype.push;\n\n/**\n * Applies a function to every item in an array and concatenates the resulting\n * arrays into a single flat array.\n *\n * @param {array} array\n * @param {function} fn\n * @return {array}\n */\nfunction flatMapArray(array, fn) {\n  var ret = [];\n  for (var ii = 0; ii < array.length; ii++) {\n    var result = fn.call(array, array[ii], ii);\n    if (Array.isArray(result)) {\n      push.apply(ret, result);\n    } else if (result != null) {\n      throw new TypeError('flatMapArray: Callback must return an array or null, ' + 'received \"' + result + '\" instead');\n    }\n  }\n  return ret;\n}\n\nmodule.exports = flatMapArray;"]}