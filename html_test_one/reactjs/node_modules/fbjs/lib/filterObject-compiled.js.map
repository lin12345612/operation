{"version":3,"sources":["filterObject.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA;;AAEA,IAAI,iBAAiB,OAAO,SAAP,CAAiB,cAAtC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,YAAT,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC,OAAxC,EAAiD;AAC/C,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,IAAP;AACD;AACD,MAAI,SAAS,EAAb;AACA,OAAK,IAAI,IAAT,IAAiB,MAAjB,EAAyB;AACvB,QAAI,eAAe,IAAf,CAAoB,MAApB,EAA4B,IAA5B,KAAqC,SAAS,IAAT,CAAc,OAAd,EAAuB,OAAO,IAAP,CAAvB,EAAqC,IAArC,EAA2C,MAA3C,CAAzC,EAA6F;AAC3F,aAAO,IAAP,IAAe,OAAO,IAAP,CAAf;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"filterObject-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object of all the values for which `callback`\n * returns a true value. The `callback` is invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `filterObject` will not be\n * visited by `callback`. If the values of existing properties are changed, the\n * value passed to `callback` will be the value at the time `filterObject`\n * visits them. Properties that are deleted before being visited are not\n * visited.\n *\n * @grep function objectFilter()\n * @grep function objFilter()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction filterObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name) && callback.call(context, object[name], name, object)) {\n      result[name] = object[name];\n    }\n  }\n  return result;\n}\n\nmodule.exports = filterObject;"]}