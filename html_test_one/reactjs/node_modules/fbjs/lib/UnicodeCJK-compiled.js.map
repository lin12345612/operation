{"version":3,"sources":["UnicodeCJK.js"],"names":[],"mappings":"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","file":"UnicodeCJK-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * Unicode algorithms for CJK (Chinese, Japanese, Korean) writing systems.\n *\n * Utilities for Hanzi/Kanji/Hanja logographs and Kanas (Katakana and Hiragana)\n * syllables.\n *\n * For Korean Hangul see module `UnicodeHangulKorean`.\n */\n\n'use strict';\n\n/**\n * Latin\n *\n * NOTE: The code assumes these sets include only BMP characters.\n */\n\nvar R_LATIN_ASCII = 'a-zA-Z';\nvar R_LATIN_FULLWIDTH = '\\uFF21-\\uFF3A\\uFF41-\\uFF5A';\nvar R_LATIN = R_LATIN_ASCII + R_LATIN_FULLWIDTH;\n\n/**\n * Hiragana & Katakana\n *\n * NOTE: Some ranges include non-BMP characters. We do not support those ranges\n * for now.\n */\nvar R_HIRAGANA = '\\u3040-\\u309F';\nvar R_KATAKANA = '\\u30A0-\\u30FF';\nvar R_KATAKANA_PHONETIC = '\\u31F0-\\u31FF';\nvar R_KATAKANA_HALFWIDTH = '\\uFF65-\\uFF9F';\n// var R_KANA_SUPPLEMENT     = '\\U0001B000-\\U0001B0FF';\nvar R_KATAKANA_ALL = R_KATAKANA + R_KATAKANA_PHONETIC + R_KATAKANA_HALFWIDTH;\nvar R_KANA = R_HIRAGANA + R_KATAKANA_ALL;\n\nvar I_HIRAGANA = [0x3040, 0x309F];\nvar I_KATAKANA = [0x30A0, 0x30FF];\nvar I_HIRAGANA_TO_KATAKANA = I_KATAKANA[0] - I_HIRAGANA[0];\n\n/**\n * Hanzi/Kanji/Hanja\n *\n * NOTE: Some ranges include non-BMP characters. We do not support those ranges\n * for now.\n */\nvar R_IDEO_MAIN = '\\u4E00-\\u9FCF';\nvar R_IDEO_EXT_A = '\\u3400-\\u4DBF';\n// var R_IDEO_EXT_B = '\\U00020000-\\U0002A6DF';\n// var R_IDEO_EXT_C = '\\U0002A700-\\U0002B73F';\n// var R_IDEO_EXT_D = '\\U0002B740-\\U0002B81F';\nvar R_IDEO = R_IDEO_MAIN + R_IDEO_EXT_A;\n\n/**\n * Hangul\n */\n// var R_HANGUL_JAMO           = '\\u1100-\\u11FF';\n// var R_HANGUL_JAMO_EXT_A     = '\\uA960-\\uA97F';\n// var R_HANGUL_JAMO_EXT_B     = '\\uD7B0-\\uD7FF';\n// var R_HANGUL_COMPATIBILITY  = '\\u3130-\\u318F';\n// var R_HANGUL_COMP_HALFWIDTH = '\\uFFA0-\\uFFDF';\nvar R_HANGUL_SYLLABLES = '\\uAC00-\\uD7AF';\n\n/**\n * Globals\n */\nvar R_IDEO_OR_SYLL = R_IDEO + R_KANA + R_HANGUL_SYLLABLES;\n\nvar REGEX_IDEO = null;\nvar REGEX_KANA = null;\nvar REGEX_IDEO_OR_SYLL = null;\nvar REGEX_IS_KANA_WITH_TRAILING_LATIN = null;\n\n/**\n * Whether the string includes any Katakana or Hiragana characters.\n *\n * @param {string} str\n * @return {boolean}\n */\nfunction hasKana(str) {\n  REGEX_KANA = REGEX_KANA || new RegExp('[' + R_KANA + ']');\n  return REGEX_KANA.test(str);\n}\n\n/**\n * Whether the string includes any CJK Ideograph characters.\n *\n * @param {string} str\n * @return {boolean}\n */\nfunction hasIdeograph(str) {\n  REGEX_IDEO = REGEX_IDEO || new RegExp('[' + R_IDEO + ']');\n  return REGEX_IDEO.test(str);\n}\n\n/**\n * Whether the string includes any CJK Ideograph or Syllable characters.\n *\n * @param {string} str\n * @return {boolean}\n */\nfunction hasIdeoOrSyll(str) {\n  REGEX_IDEO_OR_SYLL = REGEX_IDEO_OR_SYLL || new RegExp('[' + R_IDEO_OR_SYLL + ']');\n  return REGEX_IDEO_OR_SYLL.test(str);\n}\n\n/**\n * @param {string} chr\n * @output {string}\n */\nfunction charCodeToKatakana(chr) {\n  var charCode = chr.charCodeAt(0);\n  return String.fromCharCode(charCode < I_HIRAGANA[0] || charCode > I_HIRAGANA[1] ? charCode : charCode + I_HIRAGANA_TO_KATAKANA);\n}\n\n/**\n * Replace any Hiragana character with the matching Katakana\n *\n * @param {string} str\n * @output {string}\n */\nfunction hiraganaToKatakana(str) {\n  if (!hasKana(str)) {\n    return str;\n  }\n  return str.split('').map(charCodeToKatakana).join('');\n}\n\n/**\n * Whether the string is exactly a sequence of Kana characters followed by one\n * Latin character.\n *\n * @param {string} str\n * @output {string}\n */\nfunction isKanaWithTrailingLatin(str) {\n  REGEX_IS_KANA_WITH_TRAILING_LATIN = REGEX_IS_KANA_WITH_TRAILING_LATIN || new RegExp('^' + '[' + R_KANA + ']+' + '[' + R_LATIN + ']' + '$');\n  return REGEX_IS_KANA_WITH_TRAILING_LATIN.test(str);\n}\n\n/**\n * Drops the trailing Latin character from a string that is exactly a sequence\n * of Kana characters followed by one Latin character.\n *\n * @param {string} str\n * @output {string}\n */\nfunction kanaRemoveTrailingLatin(str) {\n  if (isKanaWithTrailingLatin(str)) {\n    return str.substr(0, str.length - 1);\n  }\n  return str;\n}\n\nvar UnicodeCJK = {\n  hasKana: hasKana,\n  hasIdeograph: hasIdeograph,\n  hasIdeoOrSyll: hasIdeoOrSyll,\n  hiraganaToKatakana: hiraganaToKatakana,\n  isKanaWithTrailingLatin: isKanaWithTrailingLatin,\n  kanaRemoveTrailingLatin: kanaRemoveTrailingLatin\n};\n\nmodule.exports = UnicodeCJK;"]}