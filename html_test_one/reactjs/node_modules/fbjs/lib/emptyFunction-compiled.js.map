{"version":3,"sources":["emptyFunction.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;AASA,SAAS,iBAAT,CAA2B,GAA3B,EAAgC;AAC9B,SAAO,YAAY;AACjB,WAAO,GAAP;AACD,GAFD;AAGD;;AAED;;;;;AAKA,IAAI,gBAAgB,SAAS,aAAT,GAAyB,CAAE,CAA/C;;AAEA,cAAc,WAAd,GAA4B,iBAA5B;AACA,cAAc,gBAAd,GAAiC,kBAAkB,KAAlB,CAAjC;AACA,cAAc,eAAd,GAAgC,kBAAkB,IAAlB,CAAhC;AACA,cAAc,eAAd,GAAgC,kBAAkB,IAAlB,CAAhC;AACA,cAAc,eAAd,GAAgC,YAAY;AAC1C,SAAO,IAAP;AACD,CAFD;AAGA,cAAc,mBAAd,GAAoC,UAAU,GAAV,EAAe;AACjD,SAAO,GAAP;AACD,CAFD;;AAIA,OAAO,OAAP,GAAiB,aAAjB","file":"emptyFunction-compiled.js","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;"]}