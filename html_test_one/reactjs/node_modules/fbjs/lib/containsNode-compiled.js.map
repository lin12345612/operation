{"version":3,"sources":["containsNode.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;AASA,IAAI,aAAa,QAAQ,cAAR,CAAjB;;AAEA;;AAEA;;;AAGA,SAAS,YAAT,CAAsB,SAAtB,EAAiC,SAAjC,EAA4C;AAC1C,MAAI,CAAC,SAAD,IAAc,CAAC,SAAnB,EAA8B;AAC5B,WAAO,KAAP;AACD,GAFD,MAEO,IAAI,cAAc,SAAlB,EAA6B;AAClC,WAAO,IAAP;AACD,GAFM,MAEA,IAAI,WAAW,SAAX,CAAJ,EAA2B;AAChC,WAAO,KAAP;AACD,GAFM,MAEA,IAAI,WAAW,SAAX,CAAJ,EAA2B;AAChC,WAAO,aAAa,SAAb,EAAwB,UAAU,UAAlC,CAAP;AACD,GAFM,MAEA,IAAI,cAAc,SAAlB,EAA6B;AAClC,WAAO,UAAU,QAAV,CAAmB,SAAnB,CAAP;AACD,GAFM,MAEA,IAAI,UAAU,uBAAd,EAAuC;AAC5C,WAAO,CAAC,EAAE,UAAU,uBAAV,CAAkC,SAAlC,IAA+C,EAAjD,CAAR;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;AACF;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"containsNode-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;"]}