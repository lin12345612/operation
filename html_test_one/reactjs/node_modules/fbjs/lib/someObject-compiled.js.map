{"version":3,"sources":["someObject.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAI,iBAAiB,OAAO,SAAP,CAAiB,cAAtC;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,SAAS,UAAT,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,OAAtC,EAA+C;AAC7C,OAAK,IAAI,IAAT,IAAiB,MAAjB,EAAyB;AACvB,QAAI,eAAe,IAAf,CAAoB,MAApB,EAA4B,IAA5B,CAAJ,EAAuC;AACrC,UAAI,SAAS,IAAT,CAAc,OAAd,EAAuB,OAAO,IAAP,CAAvB,EAAqC,IAArC,EAA2C,MAA3C,CAAJ,EAAwD;AACtD,eAAO,IAAP;AACD;AACF;AACF;AACD,SAAO,KAAP;AACD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"someObject-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object until it finds one where callback returns a truthy value. If such a\n * property is found, `someObject` immediately returns true. Otherwise, it\n * returns false.\n *\n * The `callback` is invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `someObject` will not be\n * visited by `callback`. If the values of existing properties are changed, the\n * value passed to `callback` will be the value at the time `someObject`\n * visits them. Properties that are deleted before being visited are not\n * visited.\n */\nfunction someObject(object, callback, context) {\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      if (callback.call(context, object[name], name, object)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = someObject;"]}