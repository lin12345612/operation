{"version":3,"sources":["keyMirror.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA;;AAEA,IAAI,YAAY,QAAQ,aAAR,CAAhB;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,IAAI,YAAY,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtC,MAAI,MAAM,EAAV;AACA,MAAI,GAAJ;AACA,IAAE,eAAe,MAAf,IAAyB,CAAC,MAAM,OAAN,CAAc,GAAd,CAA5B,IAAkD,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,UAAU,KAAV,EAAiB,6CAAjB,CAAxC,GAA0G,UAAU,KAAV,CAA5J,GAA+K,KAAK,CAApL;AACA,OAAK,GAAL,IAAY,GAAZ,EAAiB;AACf,QAAI,CAAC,IAAI,cAAJ,CAAmB,GAAnB,CAAL,EAA8B;AAC5B;AACD;AACD,QAAI,GAAJ,IAAW,GAAX;AACD;AACD,SAAO,GAAP;AACD,CAXD;;AAaA,OAAO,OAAP,GAAiB,SAAjB","file":"keyMirror-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function keyMirror(obj) {\n  var ret = {};\n  var key;\n  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;"]}