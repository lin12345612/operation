{"version":3,"sources":["everySet.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA;;;;;AAIA,SAAS,QAAT,CAAkB,GAAlB,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C;AACxC,MAAI,WAAW,IAAI,OAAJ,EAAf;AACA,MAAI,UAAU,SAAS,IAAT,EAAd;AACA,SAAO,CAAC,QAAQ,IAAhB,EAAsB;AACpB,QAAI,QAAQ,QAAQ,KAApB;AACA,QAAI,CAAC,SAAS,IAAT,CAAc,OAAd,EAAuB,MAAM,CAAN,CAAvB,EAAiC,MAAM,CAAN,CAAjC,EAA2C,GAA3C,CAAL,EAAsD;AACpD,aAAO,KAAP;AACD;AACD,cAAU,SAAS,IAAT,EAAV;AACD;AACD,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"everySet-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks\n */\n\n'use strict';\n\n/**\n * The everySet() method tests whether all elements in the given Set pass the\n * test implemented by the provided function.\n */\nfunction everySet(set, callback, context) {\n  var iterator = set.entries();\n  var current = iterator.next();\n  while (!current.done) {\n    var entry = current.value;\n    if (!callback.call(context, entry[1], entry[0], set)) {\n      return false;\n    }\n    current = iterator.next();\n  }\n  return true;\n}\n\nmodule.exports = everySet;"]}