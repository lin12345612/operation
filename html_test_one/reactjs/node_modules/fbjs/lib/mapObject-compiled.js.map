{"version":3,"sources":["mapObject.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA;;AAEA,IAAI,iBAAiB,OAAO,SAAP,CAAiB,cAAtC;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,QAA3B,EAAqC,OAArC,EAA8C;AAC5C,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,IAAP;AACD;AACD,MAAI,SAAS,EAAb;AACA,OAAK,IAAI,IAAT,IAAiB,MAAjB,EAAyB;AACvB,QAAI,eAAe,IAAf,CAAoB,MAApB,EAA4B,IAA5B,CAAJ,EAAuC;AACrC,aAAO,IAAP,IAAe,SAAS,IAAT,CAAc,OAAd,EAAuB,OAAO,IAAP,CAAvB,EAAqC,IAArC,EAA2C,MAA3C,CAAf;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"mapObject-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n  return result;\n}\n\nmodule.exports = mapObject;"]}