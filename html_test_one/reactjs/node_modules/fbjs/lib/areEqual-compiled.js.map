{"version":3,"sources":["areEqual.js"],"names":[],"mappings":"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","file":"areEqual-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar aStackPool = [];\nvar bStackPool = [];\n\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  }\n  // Assume equality for cyclic structures.\n  var length = aStack.length;\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0;\n  // Recursively compare objects and arrays.\n  if (className === '[object Array]') {\n    size = a.length;\n    if (size !== b.length) {\n      return false;\n    }\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n    var keys = Object.keys(a);\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;"]}