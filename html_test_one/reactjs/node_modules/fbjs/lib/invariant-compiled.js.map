{"version":3,"sources":["invariant.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA;;AAEA;;;;;;;;;;;AAWA,IAAI,iBAAiB,SAAS,cAAT,CAAwB,MAAxB,EAAgC,CAAE,CAAvD;;AAEA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,mBAAiB,SAAS,cAAT,CAAwB,MAAxB,EAAgC;AAC/C,QAAI,WAAW,SAAf,EAA0B;AACxB,YAAM,IAAI,KAAJ,CAAU,8CAAV,CAAN;AACD;AACF,GAJD;AAKD;;AAED,SAAS,SAAT,CAAmB,SAAnB,EAA8B,MAA9B,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD;AACtD,iBAAe,MAAf;;AAEA,MAAI,CAAC,SAAL,EAAgB;AACd,QAAI,KAAJ;AACA,QAAI,WAAW,SAAf,EAA0B;AACxB,cAAQ,IAAI,KAAJ,CAAU,uEAAuE,6DAAjF,CAAR;AACD,KAFD,MAEO;AACL,UAAI,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAX;AACA,UAAI,WAAW,CAAf;AACA,cAAQ,IAAI,KAAJ,CAAU,OAAO,OAAP,CAAe,KAAf,EAAsB,YAAY;AAClD,eAAO,KAAK,UAAL,CAAP;AACD,OAFiB,CAAV,CAAR;AAGA,YAAM,IAAN,GAAa,qBAAb;AACD;;AAED,UAAM,WAAN,GAAoB,CAApB,CAbc,CAaS;AACvB,UAAM,KAAN;AACD;AACF;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"invariant-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;"]}