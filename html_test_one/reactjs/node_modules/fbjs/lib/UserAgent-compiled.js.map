{"version":3,"sources":["UserAgent.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA;;AAEA,IAAI,gBAAgB,QAAQ,iBAAR,CAApB;AACA,IAAI,eAAe,QAAQ,gBAAR,CAAnB;;AAEA,IAAI,YAAY,QAAQ,aAAR,CAAhB;AACA,IAAI,oBAAoB,QAAQ,qBAAR,CAAxB;;AAEA;;;;;;;;;AASA,SAAS,OAAT,CAAiB,IAAjB,EAAuB,OAAvB,EAAgC,KAAhC,EAAuC,UAAvC,EAAmD;AACjD;AACA,MAAI,SAAS,KAAb,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED;AACA,MAAI,CAAC,MAAM,UAAN,CAAiB,IAAjB,CAAL,EAA6B;AAC3B,WAAO,KAAP;AACD;;AAED;AACA,MAAI,QAAQ,MAAM,KAAN,CAAY,KAAK,MAAjB,CAAZ;AACA,MAAI,OAAJ,EAAa;AACX,YAAQ,aAAa,WAAW,KAAX,CAAb,GAAiC,KAAzC;AACA,WAAO,aAAa,QAAb,CAAsB,KAAtB,EAA6B,OAA7B,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED;;;;;;;;;AASA,SAAS,wBAAT,CAAkC,OAAlC,EAA2C;AACzC,MAAI,cAAc,YAAd,KAA+B,SAAnC,EAA8C;AAC5C,WAAO,QAAQ,OAAR,CAAgB,QAAhB,EAA0B,EAA1B,CAAP;AACD;;AAED,SAAO,OAAP;AACD;;AAED;;;;AAIA,IAAI,YAAY;AACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,aAAW,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACnC,WAAO,QAAQ,cAAc,WAAtB,EAAmC,cAAc,kBAAjD,EAAqE,KAArE,CAAP;AACD,GA9Ca;;AAiDd;;;;;;;;AAQA,yBAAuB,SAAS,qBAAT,CAA+B,KAA/B,EAAsC;AAC3D,WAAO,QAAQ,cAAc,mBAAtB,EAA2C,IAA3C,EAAiD,KAAjD,CAAP;AACD,GA3Da;;AA8Dd;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,YAAU,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACjC,WAAO,QAAQ,cAAc,UAAtB,EAAkC,IAAlC,EAAwC,KAAxC,CAAP;AACD,GAxFa;;AA2Fd;;;;;;;;;;;;;;;;;;;;;;AAsBA,YAAU,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACjC,WAAO,QAAQ,cAAc,UAAtB,EAAkC,cAAc,aAAhD,EAA+D,KAA/D,CAAP;AACD,GAnHa;;AAsHd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,cAAY,SAAS,UAAT,CAAoB,KAApB,EAA2B;AACrC,WAAO,QAAQ,cAAc,YAAtB,EAAoC,cAAc,mBAAlD,EAAuE,KAAvE,EAA8E,wBAA9E,CAAP;AACD,GA3Ja;;AA8Jd;;;;;;;;AAQA,0BAAwB,SAAS,sBAAT,CAAgC,KAAhC,EAAuC;AAC7D,WAAO,QAAQ,cAAc,oBAAtB,EAA4C,IAA5C,EAAkD,KAAlD,CAAP;AACD;AAxKa,CAAhB;;AA2KA,OAAO,OAAP,GAAiB,UAAU,SAAV,EAAqB,iBAArB,CAAjB","file":"UserAgent-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar UserAgentData = require('./UserAgentData');\nvar VersionRange = require('./VersionRange');\n\nvar mapObject = require('./mapObject');\nvar memoizeStringOnly = require('./memoizeStringOnly');\n\n/**\n * Checks to see whether `name` and `version` satisfy `query`.\n *\n * @param {string} name Name of the browser, device, engine or platform\n * @param {?string} version Version of the browser, engine or platform\n * @param {string} query Query of form \"Name [range expression]\"\n * @param {?function} normalizer Optional pre-processor for range expression\n * @return {boolean}\n */\nfunction compare(name, version, query, normalizer) {\n  // check for exact match with no version\n  if (name === query) {\n    return true;\n  }\n\n  // check for non-matching names\n  if (!query.startsWith(name)) {\n    return false;\n  }\n\n  // full comparison with version\n  var range = query.slice(name.length);\n  if (version) {\n    range = normalizer ? normalizer(range) : range;\n    return VersionRange.contains(range, version);\n  }\n\n  return false;\n}\n\n/**\n * Normalizes `version` by stripping any \"NT\" prefix, but only on the Windows\n * platform.\n *\n * Mimics the stripping performed by the `UserAgentWindowsPlatform` PHP class.\n *\n * @param {string} version\n * @return {string}\n */\nfunction normalizePlatformVersion(version) {\n  if (UserAgentData.platformName === 'Windows') {\n    return version.replace(/^\\s*NT/, '');\n  }\n\n  return version;\n}\n\n/**\n * Provides client-side access to the authoritative PHP-generated User Agent\n * information supplied by the server.\n */\nvar UserAgent = {\n  /**\n   * Check if the User Agent browser matches `query`.\n   *\n   * `query` should be a string like \"Chrome\" or \"Chrome > 33\".\n   *\n   * Valid browser names include:\n   *\n   * - ACCESS NetFront\n   * - AOL\n   * - Amazon Silk\n   * - Android\n   * - BlackBerry\n   * - BlackBerry PlayBook\n   * - Chrome\n   * - Chrome for iOS\n   * - Chrome frame\n   * - Facebook PHP SDK\n   * - Facebook for iOS\n   * - Firefox\n   * - IE\n   * - IE Mobile\n   * - Mobile Safari\n   * - Motorola Internet Browser\n   * - Nokia\n   * - Openwave Mobile Browser\n   * - Opera\n   * - Opera Mini\n   * - Opera Mobile\n   * - Safari\n   * - UIWebView\n   * - Unknown\n   * - webOS\n   * - etc...\n   *\n   * An authoritative list can be found in the PHP `BrowserDetector` class and\n   * related classes in the same file (see calls to `new UserAgentBrowser` here:\n   * https://fburl.com/50728104).\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"Name [range expression]\"\n   * @return {boolean}\n   */\n  isBrowser: function isBrowser(query) {\n    return compare(UserAgentData.browserName, UserAgentData.browserFullVersion, query);\n  },\n\n\n  /**\n   * Check if the User Agent browser uses a 32 or 64 bit architecture.\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"32\" or \"64\".\n   * @return {boolean}\n   */\n  isBrowserArchitecture: function isBrowserArchitecture(query) {\n    return compare(UserAgentData.browserArchitecture, null, query);\n  },\n\n\n  /**\n   * Check if the User Agent device matches `query`.\n   *\n   * `query` should be a string like \"iPhone\" or \"iPad\".\n   *\n   * Valid device names include:\n   *\n   * - Kindle\n   * - Kindle Fire\n   * - Unknown\n   * - iPad\n   * - iPhone\n   * - iPod\n   * - etc...\n   *\n   * An authoritative list can be found in the PHP `DeviceDetector` class and\n   * related classes in the same file (see calls to `new UserAgentDevice` here:\n   * https://fburl.com/50728332).\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"Name\"\n   * @return {boolean}\n   */\n  isDevice: function isDevice(query) {\n    return compare(UserAgentData.deviceName, null, query);\n  },\n\n\n  /**\n   * Check if the User Agent rendering engine matches `query`.\n   *\n   * `query` should be a string like \"WebKit\" or \"WebKit >= 537\".\n   *\n   * Valid engine names include:\n   *\n   * - Gecko\n   * - Presto\n   * - Trident\n   * - WebKit\n   * - etc...\n   *\n   * An authoritative list can be found in the PHP `RenderingEngineDetector`\n   * class related classes in the same file (see calls to `new\n   * UserAgentRenderingEngine` here: https://fburl.com/50728617).\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"Name [range expression]\"\n   * @return {boolean}\n   */\n  isEngine: function isEngine(query) {\n    return compare(UserAgentData.engineName, UserAgentData.engineVersion, query);\n  },\n\n\n  /**\n   * Check if the User Agent platform matches `query`.\n   *\n   * `query` should be a string like \"Windows\" or \"iOS 5 - 6\".\n   *\n   * Valid platform names include:\n   *\n   * - Android\n   * - BlackBerry OS\n   * - Java ME\n   * - Linux\n   * - Mac OS X\n   * - Mac OS X Calendar\n   * - Mac OS X Internet Account\n   * - Symbian\n   * - SymbianOS\n   * - Windows\n   * - Windows Mobile\n   * - Windows Phone\n   * - iOS\n   * - iOS Facebook Integration Account\n   * - iOS Facebook Social Sharing UI\n   * - webOS\n   * - Chrome OS\n   * - etc...\n   *\n   * An authoritative list can be found in the PHP `PlatformDetector` class and\n   * related classes in the same file (see calls to `new UserAgentPlatform`\n   * here: https://fburl.com/50729226).\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"Name [range expression]\"\n   * @return {boolean}\n   */\n  isPlatform: function isPlatform(query) {\n    return compare(UserAgentData.platformName, UserAgentData.platformFullVersion, query, normalizePlatformVersion);\n  },\n\n\n  /**\n   * Check if the User Agent platform is a 32 or 64 bit architecture.\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"32\" or \"64\".\n   * @return {boolean}\n   */\n  isPlatformArchitecture: function isPlatformArchitecture(query) {\n    return compare(UserAgentData.platformArchitecture, null, query);\n  }\n};\n\nmodule.exports = mapObject(UserAgent, memoizeStringOnly);"]}