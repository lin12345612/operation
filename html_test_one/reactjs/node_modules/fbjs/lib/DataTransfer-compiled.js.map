{"version":3,"sources":["DataTransfer.js"],"names":[],"mappings":"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","file":"DataTransfer-compiled.js","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar PhotosMimeType = require('./PhotosMimeType');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar emptyFunction = require('./emptyFunction');\n\nvar CR_LF_REGEX = new RegExp('\\r\\n', 'g');\nvar LF_ONLY = '\\n';\n\nvar RICH_TEXT_TYPES = {\n  'text/rtf': 1,\n  'text/html': 1\n};\n\n/**\n * If DataTransferItem is a file then return the Blob of data.\n *\n * @param {object} item\n * @return {?blob}\n */\nfunction getFileFromDataTransfer(item) {\n  if (item.kind == 'file') {\n    return item.getAsFile();\n  }\n}\n\nvar DataTransfer = function () {\n  /**\n   * @param {object} data\n   */\n  function DataTransfer(data) {\n    _classCallCheck(this, DataTransfer);\n\n    this.data = data;\n\n    // Types could be DOMStringList or array\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\n  }\n\n  /**\n   * Is this likely to be a rich text data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isRichText = function isRichText() {\n    // If HTML is available, treat this data as rich text. This way, we avoid\n    // using a pasted image if it is packaged with HTML -- this may occur with\n    // pastes from MS Word, for example.  However this is only rich text if\n    // there's accompanying text.\n    if (this.getHTML() && this.getText()) {\n      return true;\n    }\n\n    // When an image is copied from a preview window, you end up with two\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\n    if (this.isImage()) {\n      return false;\n    }\n\n    return this.types.some(function (type) {\n      return RICH_TEXT_TYPES[type];\n    });\n  };\n\n  /**\n   * Get raw text.\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getText = function getText() {\n    var text;\n    if (this.data.getData) {\n      if (!this.types.length) {\n        text = this.data.getData('Text');\n      } else if (this.types.indexOf('text/plain') != -1) {\n        text = this.data.getData('text/plain');\n      }\n    }\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n  };\n\n  /**\n   * Get HTML paste data\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getHTML = function getHTML() {\n    if (this.data.getData) {\n      if (!this.types.length) {\n        return this.data.getData('Text');\n      } else if (this.types.indexOf('text/html') != -1) {\n        return this.data.getData('text/html');\n      }\n    }\n  };\n\n  /**\n   * Is this a link data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isLink = function isLink() {\n    return this.types.some(function (type) {\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\n    });\n  };\n\n  /**\n   * Get a link url.\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getLink = function getLink() {\n    if (this.data.getData) {\n      if (this.types.indexOf('text/x-moz-url') != -1) {\n        var url = this.data.getData('text/x-moz-url').split('\\n');\n        return url[0];\n      }\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\n    }\n\n    return null;\n  };\n\n  /**\n   * Is this an image data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isImage = function isImage() {\n    var isImage = this.types.some(function (type) {\n      // Firefox will have a type of application/x-moz-file for images during\n      // dragging\n      return type.indexOf('application/x-moz-file') != -1;\n    });\n\n    if (isImage) {\n      return true;\n    }\n\n    var items = this.getFiles();\n    for (var i = 0; i < items.length; i++) {\n      var type = items[i].type;\n      if (!PhotosMimeType.isImage(type)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  DataTransfer.prototype.getCount = function getCount() {\n    if (this.data.hasOwnProperty('items')) {\n      return this.data.items.length;\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\n      return this.data.mozItemCount;\n    } else if (this.data.files) {\n      return this.data.files.length;\n    }\n    return null;\n  };\n\n  /**\n   * Get files.\n   *\n   * @return {array}\n   */\n\n\n  DataTransfer.prototype.getFiles = function getFiles() {\n    if (this.data.items) {\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n    } else if (this.data.files) {\n      return Array.prototype.slice.call(this.data.files);\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * Are there any files to fetch?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.hasFiles = function hasFiles() {\n    return this.getFiles().length > 0;\n  };\n\n  return DataTransfer;\n}();\n\nmodule.exports = DataTransfer;"]}