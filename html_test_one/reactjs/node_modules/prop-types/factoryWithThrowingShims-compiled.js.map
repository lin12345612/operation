{"version":3,"sources":["factoryWithThrowingShims.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAI,gBAAgB,QAAQ,wBAAR,CAApB;AACA,IAAI,YAAY,QAAQ,oBAAR,CAAhB;AACA,IAAI,uBAAuB,QAAQ,4BAAR,CAA3B;;AAEA,OAAO,OAAP,GAAiB,YAAW;AAC1B,WAAS,IAAT,CAAc,KAAd,EAAqB,QAArB,EAA+B,aAA/B,EAA8C,QAA9C,EAAwD,YAAxD,EAAsE,MAAtE,EAA8E;AAC5E,QAAI,WAAW,oBAAf,EAAqC;AACnC;AACA;AACD;AACD,cACE,KADF,EAEE,yFACA,+CADA,GAEA,gDAJF;AAMD;AACD,OAAK,UAAL,GAAkB,IAAlB;AACA,WAAS,OAAT,GAAmB;AACjB,WAAO,IAAP;AACD;AACD;AACA;AACA,MAAI,iBAAiB;AACnB,WAAO,IADY;AAEnB,UAAM,IAFa;AAGnB,UAAM,IAHa;AAInB,YAAQ,IAJW;AAKnB,YAAQ,IALW;AAMnB,YAAQ,IANW;AAOnB,YAAQ,IAPW;;AASnB,SAAK,IATc;AAUnB,aAAS,OAVU;AAWnB,aAAS,IAXU;AAYnB,gBAAY,OAZO;AAanB,UAAM,IAba;AAcnB,cAAU,OAdS;AAenB,WAAO,OAfY;AAgBnB,eAAW,OAhBQ;AAiBnB,WAAO,OAjBY;AAkBnB,WAAO;AAlBY,GAArB;;AAqBA,iBAAe,cAAf,GAAgC,aAAhC;AACA,iBAAe,SAAf,GAA2B,cAA3B;;AAEA,SAAO,cAAP;AACD,CA5CD","file":"factoryWithThrowingShims-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"]}