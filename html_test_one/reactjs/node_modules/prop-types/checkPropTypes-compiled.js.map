{"version":3,"sources":["checkPropTypes.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;;;AAEA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI,YAAY,QAAQ,oBAAR,CAAhB;AACA,MAAI,UAAU,QAAQ,kBAAR,CAAd;AACA,MAAI,uBAAuB,QAAQ,4BAAR,CAA3B;AACA,MAAI,qBAAqB,EAAzB;AACD;;AAED;;;;;;;;;;;AAWA,SAAS,cAAT,CAAwB,SAAxB,EAAmC,MAAnC,EAA2C,QAA3C,EAAqD,aAArD,EAAoE,QAApE,EAA8E;AAC5E,MAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,SAAK,IAAI,YAAT,IAAyB,SAAzB,EAAoC;AAClC,UAAI,UAAU,cAAV,CAAyB,YAAzB,CAAJ,EAA4C;AAC1C,YAAI,KAAJ;AACA;AACA;AACA;AACA,YAAI;AACF;AACA;AACA,oBAAU,OAAO,UAAU,YAAV,CAAP,KAAmC,UAA7C,EAAyD,sEAAsE,8CAA/H,EAA+K,iBAAiB,aAAhM,EAA+M,QAA/M,EAAyN,YAAzN,UAA8O,UAAU,YAAV,CAA9O;AACA,kBAAQ,UAAU,YAAV,EAAwB,MAAxB,EAAgC,YAAhC,EAA8C,aAA9C,EAA6D,QAA7D,EAAuE,IAAvE,EAA6E,oBAA7E,CAAR;AACD,SALD,CAKE,OAAO,EAAP,EAAW;AACX,kBAAQ,EAAR;AACD;AACD,gBAAQ,CAAC,KAAD,IAAU,iBAAiB,KAAnC,EAA0C,oEAAoE,+DAApE,GAAsI,iEAAtI,GAA0M,gEAA1M,GAA6Q,iCAAvT,EAA0V,iBAAiB,aAA3W,EAA0X,QAA1X,EAAoY,YAApY,SAAyZ,KAAzZ,yCAAyZ,KAAzZ;AACA,YAAI,iBAAiB,KAAjB,IAA0B,EAAE,MAAM,OAAN,IAAiB,kBAAnB,CAA9B,EAAsE;AACpE;AACA;AACA,6BAAmB,MAAM,OAAzB,IAAoC,IAApC;;AAEA,cAAI,QAAQ,WAAW,UAAX,GAAwB,EAApC;;AAEA,kBAAQ,KAAR,EAAe,sBAAf,EAAuC,QAAvC,EAAiD,MAAM,OAAvD,EAAgE,SAAS,IAAT,GAAgB,KAAhB,GAAwB,EAAxF;AACD;AACF;AACF;AACF;AACF;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"checkPropTypes-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n"]}