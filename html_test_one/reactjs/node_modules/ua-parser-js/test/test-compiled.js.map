{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["var assert      = require('assert');\nvar requirejs   = require('requirejs');\nvar UAParser    = require('./../src/ua-parser');\nvar browsers    = require('./browser-test.json');\nvar cpus        = require('./cpu-test.json');\nvar devices     = require('./device-test.json');\nvar engines     = require('./engine-test.json');\nvar os          = require('./os-test.json');\nvar parser      = new UAParser();\nvar methods     = [\n    {\n        title       : 'getBrowser',\n        label       : 'browser',\n        list        : browsers,\n        properties  : ['name', 'major', 'version']\n    },\n    {\n        title       : 'getCPU',\n        label       : 'cpu',\n        list        : cpus,\n        properties  : ['architecture']\n    },\n    {\n        title       : 'getDevice',\n        label       : 'device',\n        list        : devices,\n        properties  : ['model', 'type', 'vendor']\n    },\n    {\n        title       : 'getEngine',\n        label       : 'engine',\n        list        : engines,\n        properties  : ['name', 'version']\n    },\n    {\n        title       : 'getOS',\n        label       : 'os',\n        list        : os,\n        properties  : ['name', 'version']\n}];\n\ndescribe('UAParser()', function () {\n    var ua = 'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6';\n    assert.deepEqual(UAParser(ua), new UAParser().setUA(ua).getResult());\n});\n\nfor (var i in methods) {\n    describe(methods[i]['title'], function () {\n        for (var j in methods[i]['list']) {\n            if (!!methods[i]['list'][j].ua) {\n                describe('[' + methods[i]['list'][j].desc + ']', function () {\n                    describe('\"' + methods[i]['list'][j].ua + '\"', function () {\n                        var expect = methods[i]['list'][j].expect;\n                        var result = parser.setUA(methods[i]['list'][j].ua).getResult()[methods[i]['label']];\n\n                        methods[i]['properties'].forEach(function(m) {\n                            it('should return ' + methods[i]['label'] + ' ' + m + ': ' + expect[m], function () {\n                                assert.equal(result[m], expect[m] != 'undefined' ? expect[m] : undefined);\n                            });\n                        });\n                    });\n                });\n            }\n        }\n    });\n}\n\ndescribe('Returns', function () {\n    it('getResult() should returns JSON', function(done) {\n        assert.deepEqual(new UAParser('').getResult(), \n            {\n                ua : '',\n                browser: { name: undefined, version: undefined, major: undefined },\n                cpu: { architecture: undefined },\n                device: { vendor: undefined, model: undefined, type: undefined },\n                engine: { name: undefined, version: undefined},\n                os: { name: undefined, version: undefined }\n        });\n        done();\n    });\n});\n\ndescribe('Extending Regex', function () {\n    var uaString = 'Mozilla/5.0 MyOwnBrowser/1.3';\n    var myOwnBrowser = [[/(myownbrowser)\\/((\\d+)?[\\w\\.]+)/i], [UAParser.BROWSER.NAME, UAParser.BROWSER.VERSION, UAParser.BROWSER.MAJOR]];\n\n    var parser1 = new UAParser(uaString, {browser: myOwnBrowser});\n    assert.equal(parser1.getBrowser().name, 'MyOwnBrowser');\n    assert.equal(parser1.getBrowser().version, '1.3');\n    assert.equal(parser1.getBrowser().major, '1');\n\n    var parser2 = new UAParser({browser: myOwnBrowser});\n    assert.equal(parser2.getBrowser().name, undefined);\n    parser2.setUA(uaString);\n    assert.equal(parser2.getBrowser().name, 'MyOwnBrowser');\n    assert.equal(parser1.getBrowser().version, '1.3');\n});\n\ndescribe('Using Require.js', function () {\n    it('should loaded automatically', function(done) {\n        requirejs.config({\n            baseUrl : 'dist',\n            paths   : {\n                'ua-parser-js' : 'ua-parser.min'\n            }\n        });\n        requirejs(['ua-parser-js'], function(ua) {\n            var parser = new ua('Dillo/1.0');\n            assert.deepEqual(parser.getBrowser().name, 'Dillo');\n            done();\n        });\n    });\n});"]}